
<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
  xmlns:utilities="clr-namespace:tweetz5.Utilities" 
  xmlns:sys="clr-namespace:System;assembly=mscorlib">
  
  <utilities:StringContainsConverter x:Key="StringContainsConverter" />
  <utilities:Win7FontFamilyConverter x:Key="Win7FontFamilyConverter" />
  <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>

  <sys:Double x:Key="AppFontSize">11</sys:Double>
  <sys:Double x:Key="AppFontSizePlus1">12</sys:Double>
  <sys:Double x:Key="AppFontSizePlus3">14</sys:Double>
  <sys:Double x:Key="AppFontSizePlus7">18</sys:Double>
  <sys:Double x:Key="AppFontSizeMinus1">10</sys:Double>
  
  <Color x:Key="AppForegroundColor">#bbbbbb</Color>
  <Color x:Key="AppBackgroundColor">#333333</Color>
  <SolidColorBrush x:Key="AppForegroundBrush">#bbbbbb</SolidColorBrush>
  <SolidColorBrush x:Key="AppBackgroundBrush">#333333</SolidColorBrush>
  <SolidColorBrush x:Key="TopBarBackgroundBrush">#333344</SolidColorBrush>

  <Style x:Key="WindowStyle" TargetType="Window">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}" />
    <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
  </Style>

  <Style x:Key="SettingsPanelLabelStyle" TargetType="Label">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
  </Style>

  <Style x:Key="SettingsRadioButton" TargetType="RadioButton">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}"/>
    <Setter Property="Margin" Value="2 5"/>
    <Setter Property="Content" Value="Aa" />
  </Style>

  <Style x:Key="TopBarStyle" TargetType="DockPanel">
    <Setter Property="Background" Value="{StaticResource TopBarBackgroundBrush}" />
  </Style>

  <Style x:Key="TopBarLabelStyle" TargetType="Label">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    <Setter Property="Padding" Value="5,0,0,1" />
  </Style>

  <Style TargetType="UniformGrid" x:Key="NavBar">
    <Setter Property="Margin" Value="3 0 3 0" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
  </Style>

  <Style TargetType="Button" x:Key="NavBarButton">
    <Setter Property="FontFamily" Value="{Binding Converter={StaticResource Win7FontFamilyConverter}}" />
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus3}" />
    <Setter Property="Foreground" Value="#666666" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="border">
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center">
              <ContentPresenter.Resources>
                <Style TargetType="TextBlock">
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                      <Setter Property="Foreground" Value="#557799" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="AppCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource NavBarButton}">
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus1}" />
  </Style>

  <Style x:Key="TimelineStyle" TargetType="ListBox">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
  </Style>

  <Style x:Key="TweetListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border Name="Border" Padding="3 6 3 2" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="0">
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding TweetType, Converter={StaticResource StringContainsConverter}, ConverterParameter=m}" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#333933" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TweetType, Converter={StaticResource StringContainsConverter}, ConverterParameter=d}" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#333339" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMyTweet, Mode=OneTime}" Value="True">
              <Setter TargetName="Border" Property="Background" Value="#493333" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background" Value="#393949"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TweetItemStyle" TargetType="Border">
    <Setter Property="Padding" Value="3 6 3 2" />
  </Style>

  <Style x:Key="TweetImageStyle" TargetType="Rectangle">
    <Setter Property="Width" Value="33" />
    <Setter Property="Height" Value="33" />
    <Setter Property="RadiusX" Value="4" />
    <Setter Property="RadiusY" Value="4" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="0" />
  </Style>

  <Style x:Key="TweetScreenNameStyle" TargetType="Run">
    <Setter Property="Foreground" Value="#888888"/>
  </Style>
  
  <Style x:Key="TweetImageColumnStyle" TargetType="ColumnDefinition">
    <Setter Property="Width" Value="38" />
  </Style>

  <Style x:Key="TweetTimeStyle" TargetType="Hyperlink">
    <Setter Property="Foreground" Value="#888888" />
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizeMinus1}" />
    <Setter Property="TextDecorations" Value="{x:Null}"/>
  </Style>

  <Style x:Key="TweetStyle" TargetType="TextBlock">
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>

  <Style x:Key="TweetRetweetedByStyle" TargetType="TextBlock">
    <Setter Property="Margin" Value="0 2 0 0"></Setter>
    <Setter Property="TextAlignment" Value="Right" />
    <Setter Property="FontStyle" Value="Italic" />
    <Setter Property="Foreground" Value="#888888" />
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizeMinus1}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RetweetedBy}" Value="{x:Static sys:String.Empty}">
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TweetActions" TargetType="Grid">
    <Setter Property="Margin" Value="0 2 0 0"></Setter>
    <Setter Property="HorizontalAlignment" Value="Right" />
  </Style>


  <Style x:Key="TweetActionsItem" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizeMinus1}" />
    <Setter Property="Foreground" Value="#666666" />
    <Setter Property="Margin" Value="5 0 0 0" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TweetActionsItemRetweet"
         TargetType="TextBlock"
         BasedOn="{StaticResource TweetActionsItem}">
    <Setter Property="Visibility" Value="Visible" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsMyTweet}" Value="True">
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TweetActionsItemDelete"
         TargetType="TextBlock"
         BasedOn="{StaticResource TweetActionsItem}">
    <Setter Property="Visibility" Value="Collapsed" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsMyTweet}" Value="True">
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TweetActionsSymbol" TargetType="Run">
    <Setter Property="FontFamily" Value="{Binding Converter={StaticResource Win7FontFamilyConverter}}" />
  </Style>

  <Style x:Key="TweetActionsFavoritesSymbol" TargetType="Run" BasedOn="{StaticResource TweetActionsSymbol}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Favorited}" Value="True" >
        <Setter Property="Foreground" Value="DarkGoldenrod" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="TweetActionsRetweetSymbol" TargetType="Run" BasedOn="{StaticResource TweetActionsSymbol}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsRetweet}" Value="True" >
        <Setter Property="Foreground" Value="Green" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="Hyperlink">
    <Setter Property="Foreground" Value="#99bbee" />
    <Setter Property="TextDecorations" Value="{x:Null}" />
  </Style>

  <Style x:Key="TweetMention" TargetType="Span">
    <Setter Property="Foreground" Value="#99bbee" />
  </Style>

  <Style x:Key="TweetHashtag" TargetType="Span">
    <Setter Property="Foreground" Value="#99bbee" />
  </Style>

  <Style x:Key="TweetMediaStyle" TargetType="Image">
    <Setter Property="Margin" Value="0 6 0 3" />
  </Style>

  <!-- Compose -->

  <Style x:Key="ComposeTweet" TargetType="StackPanel">
    <Setter Property="Background" Value="#484848" />
    <Setter Property="Margin" Value="4 0 6 1" />
  </Style>

  <Style x:Key="ComposeTweetTitleBlock" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    <Setter Property="Margin" Value="7 4 0 4" />
  </Style>

  <Style x:Key="ComposeTweetTextBox" TargetType="TextBox">
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus3}" />
    <Setter Property="Height" Value="121" />
    <Setter Property="Foreground" Value="#dddddd" />
    <Setter Property="Background" Value="#585858" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="7 0 7 5" />
    <Setter Property="Padding" Value="3" />
  </Style>

  <Style x:Key="ComposeTweetButton" TargetType="Button">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="#cccccc" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Margin" Value="0 0 7 0" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="2000" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="border" CornerRadius="5" Background="#FF415360">
            <ContentPresenter x:Name="ButtonContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center">
              <ContentPresenter.Resources>
                <Style TargetType="TextBlock">
                  <Setter Property="TextAlignment" Value="Center" />
                  <Setter Property="Padding" Value="9 3 9 3" />
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComposeCharCounter" TargetType="TextBlock">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="TextAlignment" Value="Left" />
    <Setter Property="Foreground" Value="#cccccc" />
    <Setter Property="Margin" Value="10 0 0 0" />
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus3}" />
  </Style>

  <Style x:Key="ComposeImageStyle" TargetType="Image">
    <Setter Property="StretchDirection" Value="DownOnly" />
    <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    <Setter Property="Margin" Value="7 0 7 5" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Image}" Value="{x:Null}">
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  
  <Style x:Key="ComposeScreenNameSuggestionListBox" TargetType="ListBox">
    <Setter Property="Width" Value="120" />
    <Setter Property="Height" Value="200" />
    <Setter Property="BorderBrush" Value="Black" />
    <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}" />
  </Style>

  <!-- Scrollbar -->
  <SolidColorBrush x:Key="StandardBorderBrush" Color="#393939">
  </SolidColorBrush>
  <SolidColorBrush x:Key="StandardBrush" Color="#393939">
  </SolidColorBrush>
  <SolidColorBrush x:Key="PressedBrush" Color="#777777">
  </SolidColorBrush>
  <SolidColorBrush x:Key="HoverBrush" Color="#888888">
  </SolidColorBrush>
  <SolidColorBrush x:Key="GlyphBrush" Color="{StaticResource AppBackgroundColor}">
  </SolidColorBrush>

  <Style x:Key="VerticalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Margin" Value="1,0,1,0" />
    <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Width="8" Name="ellipse" Stroke="{StaticResource StandardBorderBrush}" Fill="{StaticResource StandardBrush}" Margin="0,2,0,2">
          </Rectangle>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource HoverBrush}">
              </Setter>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource PressedBrush}">
              </Setter>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Margin" Value="0,1,0,1" />
    <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Height="8" Name="ellipse" Stroke="{StaticResource StandardBorderBrush}" Fill="{StaticResource StandardBrush}">
          </Rectangle>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource HoverBrush}">
              </Setter>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource PressedBrush}">
              </Setter>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LineButtonUpStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Margin="1" Height="9">
            <Path Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Name="Path" Fill="{StaticResource StandardBrush}" Data="M 0 8 L 8 8 L 4 0 Z">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LineButtonDownStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Margin="1" Height="9">
            <Path Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Name="Path" Fill="{StaticResource StandardBrush}" Data="M 0 0 L 4 8 L 8 0 Z">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LineButtonLeftStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Margin="1" Width="9">
            <Path Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Name="Path" Fill="{StaticResource StandardBrush}" Data="M 0 0 L -8 4 L 0 8 Z">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="LineButtonRightStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Margin="1" Width="9">
            <Path Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Name="Path" Fill="{StaticResource StandardBrush}" Data="M 0 0 L 8 4 L 0 8 Z">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="9" />
        <RowDefinition Height="*" />
        <RowDefinition MaxHeight="9" />
      </Grid.RowDefinitions>
      <Grid.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="{StaticResource AppBackgroundColor}">
          </GradientStop>
          <GradientStop Offset="1" Color="{StaticResource AppBackgroundColor}">
          </GradientStop>
        </LinearGradientBrush>
      </Grid.Background>
      <RepeatButton Grid.Row="0" Height="9" Style="{StaticResource LineButtonUpStyle}" Command="ScrollBar.LineUpCommand">

      </RepeatButton>

      <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
          </RepeatButton>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource VerticalScrollBarThumbStyle}">
          </Thumb>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
          </RepeatButton>
        </Track.IncreaseRepeatButton>
      </Track>

      <RepeatButton Grid.Row="2" Height="9" Style="{StaticResource LineButtonDownStyle}" Command="ScrollBar.LineDownCommand">
      </RepeatButton>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="9"></ColumnDefinition>
        <ColumnDefinition Width="*"></ColumnDefinition>
        <ColumnDefinition MaxWidth="9"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <Grid.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
          <GradientStop Offset="0" Color="{StaticResource AppBackgroundColor}">
          </GradientStop>
          <GradientStop Offset="1" Color="{StaticResource AppBackgroundColor}">
          </GradientStop>
        </LinearGradientBrush>
      </Grid.Background>
      <RepeatButton Grid.Column="0" Width="9" Style="{StaticResource LineButtonLeftStyle}" Command="ScrollBar.LineLeftCommand">
      </RepeatButton>

      <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
          </RepeatButton>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource HorizontalScrollBarThumbStyle}">
          </Thumb>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
          </RepeatButton>
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton Grid.Column="2" Width="9" Style="{StaticResource LineButtonRightStyle}" Command="ScrollBar.LineRightCommand">
      </RepeatButton>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="9" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="9" />
        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="VerticalSizeThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="thumb" Height="2" Stroke="{StaticResource AppBackgroundBrush}" StrokeThickness="0.5" Cursor="SizeNS">
            <Rectangle.Fill>
              <SolidColorBrush Color="{StaticResource AppBackgroundColor}" />
            </Rectangle.Fill>
          </Rectangle>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="thumb" Property="Fill" Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="thumb" Property="Fill" Value="{StaticResource PressedBrush}" />
              <Setter Property="Cursor" Value="SizeNS" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalSizeThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle Name="thumb" Width="1" Stroke="{StaticResource AppBackgroundBrush}" StrokeThickness="0.5" Cursor="SizeWE">
            <Rectangle.Fill>
              <SolidColorBrush Color="{StaticResource AppBackgroundColor}" />
            </Rectangle.Fill>
          </Rectangle>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="thumb" Property="Stroke" Value="{StaticResource PressedBrush}" />
              <Setter Property="Cursor" Value="SizeWE" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--User Information Popup-->

  <Style x:Key="UserInfoPopupStyle" TargetType="Border">
    <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="BorderBrush" Value="#404040" />
  </Style>

  <Style x:Key="UserInfoTextBlockStyle" TargetType="TextBlock">
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>

  <Style x:Key="UserInfoNameStyle" TargetType="TextBlock" BasedOn="{StaticResource UserInfoTextBlockStyle}">
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus7}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>

  <Style x:Key="UserInfoScreenNameStyle" TargetType="TextBlock" BasedOn="{StaticResource UserInfoTextBlockStyle}">
    <Setter Property="FontSize" Value="{DynamicResource AppFontSizePlus1}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Margin" Value="0 0 0 6" />
  </Style>

  <Style x:Key="UserInfoFollowsYouStyle" TargetType="Run">
    <Setter Property="Foreground" Value="#888888"/>
    <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
    <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
  </Style>
  
  <Style x:Key="UserInfoNumberStyle" BasedOn="{StaticResource UserInfoTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
  </Style>

  <Style x:Key="VerticalSeparatorStyle" TargetType="Border">
    <Setter Property="Width" Value="1" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="#999999" />
    <Setter Property="Margin" Value="5 0" />
  </Style>

  <Style x:Key="UserInfoProfileImageStyle" TargetType="Border">
    <Setter Property="Width" Value="64" />
    <Setter Property="Height" Value="64" />
    <Setter Property="CornerRadius" Value="6" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="BorderBrush" Value="DarkGoldenrod" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

  <!-- Search box styles -->

  <Style x:Key="SearchControlStyle"
         TargetType="UserControl">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Margin" Value="4 0" />
    <Setter Property="Height" Value="18" />
  </Style>

  <Style x:Key="SearchControlTextBoxStyle"
         TargetType="TextBox">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Foreground" Value="#dddddd" />
    <Setter Property="Background" Value="#585858" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="2" />
  </Style>

  <!-- Authenticate Styles -->

  <Style x:Key="AuthenticatePanelStyle" TargetType="StackPanel">

  </Style>
    
  <!-- Shortcut Help -->
  <Style x:Key="ShortcutHelpTitleStyle" TargetType="TextBlock">
    <Setter Property="TextAlignment" Value="Center"/>
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Padding" Value="10 0 0 0"/>
  </Style>
  
<!-- Context Menu -->
  <Style x:Key="MenuItemTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Padding" Value="10 3"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="Gainsboro" />
      </Trigger>
    </Style.Triggers>  
  </Style>
  
  <Style TargetType="{x:Type MenuItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <TextBlock Style="{StaticResource MenuItemTextBlockStyle}"
                     Text="{TemplateBinding Header}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>    
  </Style>
  
  <Style TargetType="{x:Type ContextMenu}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
    <Setter Property="Foreground" Value="{StaticResource AppBackgroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border x:Name="Border"
                  Background="WhiteSmoke"
                  BorderThickness="2">
            <Border.BorderBrush>
              <SolidColorBrush Color="Black" />
            </Border.BorderBrush>
            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- GroupBox -->
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
  <Style x:Key="{x:Type GroupBox}"
         TargetType="{x:Type GroupBox}">
    <Setter Property="BorderBrush"
            Value="{StaticResource AppForegroundBrush}"/>
    <Setter Property="Foreground"
            Value="{StaticResource AppForegroundBrush}"/>
    <Setter Property="BorderThickness"
            Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="4"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="4"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="4"/>
            </Grid.RowDefinitions>
            <Border CornerRadius="4"
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="Transparent"
                    Background="{TemplateBinding Background}"/>
            <!-- ContentPresenter for the header -->
            <Border x:Name="Header"
                    Padding="6,0,6,0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1">
              <ContentPresenter ContentSource="Header"
                                RecognizesAccessKey="True" />
            </Border>
            <!-- Primary content for GroupBox -->
            <ContentPresenter Grid.Row="2"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"
                              Margin="{TemplateBinding Padding}"/>
            <Border CornerRadius="4"
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}">
              <Border.OpacityMask>
                <MultiBinding Converter=
                            "{StaticResource BorderGapMaskConverter}"
                              ConverterParameter="6">
                  <Binding ElementName="Header"
                           Path="ActualWidth"/>
                  <Binding RelativeSource="{RelativeSource Self}"
                           Path="ActualWidth"/>
                  <Binding RelativeSource="{RelativeSource Self}"
                           Path="ActualHeight"/>
                </MultiBinding>
              </Border.OpacityMask>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
  
</ResourceDictionary>